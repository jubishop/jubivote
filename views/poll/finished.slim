= content_for :head
  title Poll Finished
  - case poll.type
  - when :borda_single, :borda_split
    ==stylesheet_link_tag 'borda/finished'

p Poll: #{poll}, is finished!

p Results:

- case poll.type
- when :borda_single, :borda_split
  ruby:
    begin
      counts = poll.counts
    rescue Models::TypeError
    end

  - if counts
    h2 Participants
    ol
      - counts.each do |result|
        - participants = 'participant'.en.plural(result.count)
        - count = "(#{result.count} #{participants})"
        li.result
          | #{result} #{count}
          - details = breakdown[result.choice].select { |br| br.score > 0 }
          - unless details.empty?
            label.details for="count_#{result.choice.id}"
              | (Participant Breakdown)
            <input id="count_#{result.choice.id}" type="checkbox" />
            ul.breakdown
              - details.each do |br|
                li =br.responder.email


  h2 Borda Score
  ol
    - poll.scores.each do |result|
      - points = 'point'.en.plural(result.score)
      - score = "(#{result.score} #{points})"
      li.result
        | #{result} #{score}
        - details = breakdown[result.choice]
        - unless details.empty?
          label.details for="score_#{result.choice.id}"
            | (Score Breakdown)
          <input id="score_#{result.choice.id}" type="checkbox" />
          ul.breakdown
            - details.each do |br|
              - points = 'point'.en.plural(br.score)
              li ="#{br.responder.email} (#{br.score} #{points})"

- when :choose_one
  - breakdown, unresponded = poll.breakdown
  h2 Choices
  - breakdown.each do |choice, results|
    h3 =choice.text
    ul
      - results.each do |result|
        li =result.responder.email

  h2 Unresponded
  ul
    - unresponded.each do |responder|
      li =responder.email
