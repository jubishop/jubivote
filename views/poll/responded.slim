= content_for :head
  title Poll Completed
  ==stylesheet_link_tag :base
  ==javascript_include_tag 'poll/responded'

= content_for :banner
  | #{poll} Completed

- is_creator = member.email == poll.email

p
  | Thanks #{member}!
  - if is_creator
    =="&nbsp;"
    em
      a href=poll.edit_url (Edit this poll)

==partial(:expiration_text)

- case poll.type
- when :borda_single
  ruby:
    all_responses = member.responses(poll_id: poll.id)

  p Here's your recorded responses.
  ol
    - all_responses.sort_by! { |response| -response.data[:score] }
    - all_responses.each do |response|
      - points = 'point'.en.plural(response.data[:score])
      li ="#{response.choice} (#{response.data[:score]} #{points})"

- when :borda_split
  ruby:
    positive_responses = member.responses(poll_id: poll.id)
    rejected_choices = poll.choices.reject { |choice|
      positive_responses.find { |response| response.choice == choice }
    }

  p Here's your recorded responses.
  ol
    - positive_responses.sort_by! { |response| -response.data[:score] }
    - positive_responses.each do |response|
      - points = 'point'.en.plural(response.data[:score])
      li ="#{response.choice} ✅ (#{response.data[:score]} #{points})"
    - rejected_choices.each do |choice|
      li ="#{choice} ❌ (0 points)"

- when :choose_one
  p You responded: #{member.responses(poll_id: poll.id).first.choice.text}

button#delete-response data-id=poll.hashid Delete Response

a href=poll.duplicate_url Duplicate This Poll
