{"version":3,"sourceRoot":"","sources":["../../scss/_google_fonts.scss","../../scss/layout.scss"],"names":[],"mappings":"AAgG2B,qDC3F3B,MACE,qCAGF,gBAEE","file":"layout.css","sourcesContent":["// –––––––––––––––––––––––––––––––––––––––––––––––––––––––––\n//  Google Fonts  v.2.0.0\n// –––––––––––––––––––––––––––––––––––––––––––––––––––––––––\n//\n//  Subset config\n//\n//  Note!\n//  The Latin subset is always included if available and need not be specified.\n//  Please note that if a client browser supports unicode-range the subset parameter\n//  is ignored; the browser will select from the subsets supported by the font to\n//  get what it needs to render the text.\n//  Source: https://developers.google.com/fonts/docs/getting_started\n//\n$google-font-subsets: (\n  'arabic'      : false\n  , 'bengali'     : false\n  , 'cyrillic'    : false\n  , 'cyrillic-ext': false\n  , 'devanagari'  : false\n  , 'greek'       : false\n  , 'greek-ext'   : false\n  , 'gujarati'    : false\n  , 'hebrew'      : false\n  , 'khmer'       : false\n  , 'latin'       : false\n  , 'latin-ext'   : false\n  , 'tamil'       : false\n  , 'telugu'      : false\n  , 'thai'        : false\n  , 'vietnamese'  : false\n) !default;\n\n//\n//   Google Fonts\n//\n@mixin google-font(\n  $name   : null,     //  string (unquoted will work too)\n  $weights: 400,      //  list or numeric value (100 200 300 400 ...)\n  $styles : normal,   //  list or string (normal and or italic)\n  $text   : null      //  string (don\\'t forget to unescape )\n  ){\n    //  base url\n    $URL: '//fonts.googleapis.com/css?family=';\n\n    //  create global variables\n    @if not variable-exists(__gf__combine){ $__gf__combine: false !global; }\n    @if not variable-exists(__gf__map){ $__gf__map: () !global; }\n    @if not variable-exists(google-font-subsets){ $google-font-subsets: () !global; }\n\n    //  append italic to weights\n    @if index($styles, italic) and not str-index($weights+'',i){\n      $wgt: if(index($styles, normal), $weights, ());\n      @each $weight in $weights { $wgt: append($wgt, $weight + i); }\n      $weights: $wgt;\n    }\n\n    //  reduce and encode text\n    @if $text {\n      $list: __gf__list-unique(__gf__str-explode($text));\n      $text:'&text=';\n      $encode:('!':'%21','#':'%23','$':'%24','&':'%26','\\'':'%27',\n               '(':'%28',')':'%29','*':'%2A','+':'%2B',',':'%2C',\n               '/':'%2F',':':'%3A',';':'%3B','=':'%3D','?':'%3F',\n               '@':'%40','[':'%5B',']':'%5D',' ':'%20');\n      @for $i from 1 through length($list) {\n        $char: map-get($encode,nth($list,$i)) or nth($list,$i);\n        $text: $text + $char;\n      }\n    }\n\n    //  subsets from config\n    $subset: '';\n    @each $set, $enabled in $google-font-subsets {\n      @if $enabled {\n        $subset: $subset + if($subset == '', '', ',') + $set;\n      }\n    }\n    $subset: if(str-length($subset) > 0 and $subset != latin, '&subset=' + $subset, '');\n\n    @if $name {\n      //  replace name whitespaces\n      $name: if(type-of($name) == string, unquote($name),$name);\n      $name: __gf__str-replace(inspect($name),' ','+');\n      @if $__gf__combine and not $text {\n        //  add weights to combine map\n        $wgt: map-get($__gf__map, $name) or ();\n        $wgt: __gf__list-unique(join($wgt, $weights, comma));\n        $__gf__map: map-merge($__gf__map, ($name: $wgt)) !global;\n      } @else {\n        //  create query\n        $query: '';\n        @each $weight in $weights { $query: $query + if($query != '', ',', '') + $weight; }\n        $query: __gf__str-replace($query, ' ');\n        $query: $name + if(str-length($query) > 0 and $query != '400',  ':'+ $query, '');\n\n        //  create single immport\n        @at-root { @import url($URL + $query + if($text, $text, '') + $subset); }\n      }\n    } @else {\n      //  set combine flag\n      $__gf__combine: true  !global;\n\n      //  nested includes\n      @content;\n\n      //  convert combine map to query\n      //  (remove weights if just 400)\n      $query:'';\n      @each $font, $weights in $__gf__map {\n        $query: $query + if($query != '', '|', '') + $font +\n                if(length($weights) == 1 and (nth($weights, 1) == '400'),\n                '', ':' + join((), $weights, comma));\n      }\n\n      //  remove query whitespaces\n      $query: __gf__str-replace($query,' ');\n\n      //  create combined immport\n      @at-root { @import url($URL + $query + $subset); }\n\n      //  reset combine flag\n      $__gf__combine: false !global;\n    }\n}\n//\n//  Helper functions\n//\n@function __gf__list-unique($list) {\n  $result: ();\n  @each $item in $list { @if not index($result, $item+''){ $result: append($result, $item+'');} }\n  @each $item in $result { $result: set-nth($result, index($result, $item),unquote($item)); }\n  @return $result;\n}\n@function __gf__str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n  @return if($index,\n    str-slice($string, 1, $index - 1) + $replace +\n    __gf__str-replace(str-slice($string, $index +\n    str-length($search)), $search, $replace),\n    $string);\n}\n@function __gf__str-explode($string){\n  $list:();\n  @for $i from 1 through str-length($string) { $list: append($list, str-slice($string, $i, $i)); }\n  @return $list;\n}\n","@import \"google_fonts\";\n@include google-font(Fira Sans);\n\n$body-font: \"Fira Sans\", sans-serif;\n\n:root {\n  --font-family: #{$body-font};\n}\n\na.github,\na.home {\n  font-size: 2em;\n}\n"]}